{"ast":null,"code":"var _jsxFileName = \"/home/abhi/web dev/Assembly-End-Game/assembly-end-game/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { languages } from './langs.js';\nimport React from 'react';\nimport { clsx } from 'clsx';\nimport { getRandomWord } from './utils.js';\nimport Confetti from \"react-confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const langs = languages;\n  const [currWord, setWord] = React.useState(\"react\".toUpperCase());\n  const [guessed, setGuess] = React.useState([]);\n  const wrongGuesses = () => {\n    let cnt = 0;\n    guessed.forEach(wrd => {\n      if (!currWord.includes(wrd)) {\n        cnt += 1;\n      }\n    });\n    return cnt;\n  };\n  const wrongCnt = wrongGuesses();\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase();\n  console.log(guessed);\n  const [lastWrong, setLastWrong] = React.useState(\"\");\n  function keyClicked(key) {\n    setGuess(prev => prev.includes(key) ? [...prev] : [...prev, key]);\n    if (!currWord.includes(key)) {\n      setLastWrong(key);\n    } else {\n      setLastWrong(\"\");\n    }\n  }\n  let gameEnd = 2;\n  if (wrongCnt >= 8) {\n    gameEnd = 0;\n  }\n  if (currWord.split(\"\").every(letter => guessed.includes(letter))) {\n    gameEnd = 1;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameEnd == 1 && /*#__PURE__*/_jsxDEV(Confetti, {\n      width: window.innerWidth,\n      height: window.innerHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Head-header\",\n        children: \"Assembly: Endgame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Guess the word in under 8 attempts to keep the\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), \" programming world safe from Assembly!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), lastWrong != \"\" && gameEnd != 0 && wrongCnt >= 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Head-p\",\n        children: [\"\\u201CFarewell \", langs[wrongCnt - 1].name, \"\\u201D \\uD83E\\uDEE1\\u201C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), gameEnd == 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"game-status lost\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"You Lose!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Learn assembly and come back! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }, this), gameEnd == 1 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"game-status won\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"You win!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Well done! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-Langs\",\n      children: langs.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(\"Lang-item\", {\n          \"kill\": index < wrongCnt\n        }),\n        style: {\n          backgroundColor: element.backgroundColor,\n          color: element.color\n        },\n        children: element.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"App-word\",\n      children: currWord.split('').map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word\",\n        style: {\n          color: !guessed.includes(el) ? \"#EC5D49\" : \"#F9F4DA\"\n        },\n        children: (guessed.includes(el) || gameEnd == 0) && el.toUpperCase()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: alphabet.split(\"\").map((key, ind) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gameEnd == 2 && keyClicked(key.toUpperCase()),\n        className: clsx(\"key\", {\n          \"correct\": guessed.includes(key) && currWord.includes(key),\n          // Green if guessed and correct\n          \"incorrect\": guessed.includes(key) && !currWord.includes(key) // Red if guessed but incorrect\n        }),\n        children: key.toUpperCase()\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), gameEnd != 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        gameEnd = 2;\n        setGuess([]);\n        setWord(getRandomWord().toUpperCase());\n      },\n      className: \"App-newGame\",\n      children: \" New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jgTxohFZ8/8QvQB8ckKhBmQVhZk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["languages","React","clsx","getRandomWord","Confetti","jsxDEV","_jsxDEV","App","_s","langs","currWord","setWord","useState","toUpperCase","guessed","setGuess","wrongGuesses","cnt","forEach","wrd","includes","wrongCnt","alphabet","console","log","lastWrong","setLastWrong","keyClicked","key","prev","gameEnd","split","every","letter","className","children","width","window","innerWidth","height","innerHeight","fileName","_jsxFileName","lineNumber","columnNumber","name","map","element","index","style","backgroundColor","color","el","ind","onClick","_c","$RefreshReg$"],"sources":["/home/abhi/web dev/Assembly-End-Game/assembly-end-game/src/App.js"],"sourcesContent":["import './App.css';\nimport { languages } from './langs.js';\nimport React from 'react';\nimport {clsx} from 'clsx';\nimport { getRandomWord } from './utils.js';\nimport Confetti from \"react-confetti\"\n\nfunction App() {\n  \n  const langs = languages;\n  const [currWord,setWord] = React.useState(\"react\".toUpperCase());\n  const [guessed,setGuess] = React.useState([]);\n\n  const wrongGuesses = () => {\n    let cnt = 0;\n    guessed.forEach((wrd) => {\n        if (!currWord.includes(wrd)) { \n            cnt += 1;\n        }\n    });\n    return cnt;\n  }\n  const wrongCnt = wrongGuesses();\n\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase()\n  console.log(guessed)\n  const [lastWrong, setLastWrong] = React.useState(\"\");\n  function keyClicked(key){\n    setGuess(prev => prev.includes(key)? [...prev] : [...prev, key])\n    if(!currWord.includes(key)){\n      setLastWrong(key);\n    }else{\n      setLastWrong(\"\");\n    }\n  }\n  let gameEnd = 2;\n  if ( wrongCnt >= 8) {\n    gameEnd = 0;\n  }\n  if(currWord.split(\"\").every(letter => guessed.includes(letter))){\n    gameEnd = 1;\n  }\n  \n  return (\n\n    <div className=\"App\">\n\n      {gameEnd==1 && <Confetti width={window.innerWidth} height={window.innerHeight} />}\n\n      <div className=\"App-head\">\n        <header className=\"Head-header\">\n          Assembly: Endgame  \n        </header>\n        <p>\n          Guess the word in under 8 attempts to keep the\n          <br></br> programming world safe from Assembly!\n        </p>\n\n        {((lastWrong!=\"\" && gameEnd!=0) &&wrongCnt>=1) && \n          <div className=\"Head-p\">\n            “Farewell {langs[wrongCnt-1].name}” 🫡“\n          </div>\n        }\n\n        {\n        gameEnd==0 && <section className=\"game-status lost\">\n          <h2>You Lose!</h2>\n          <p>Learn assembly and come back! 🎉</p>\n        </section>\n        }\n        {\n        gameEnd==1 && \n        <section className=\"game-status won\">\n          <h2>You win!</h2>\n          <p>Well done! 🎉</p>\n        </section>\n        }\n\n      </div>\n        \n      <div className=\"App-Langs\">\n        {\n          langs.map((element, index) => (\n            <div \n              key={index} \n              className={clsx(\"Lang-item\", { \"kill\": index < wrongCnt })} \n              style={{ backgroundColor: element.backgroundColor, color: element.color }}\n            >\n              {element.name}\n            </div>\n            )\n          )\n        }\n      </div>\n\n      <section className='App-word'>\n        {currWord.split('').map((el, index) => (\n          <div className='word' key={index} style={{ color: !guessed.includes(el) ? \"#EC5D49\" : \"#F9F4DA\" }}>\n            {(guessed.includes(el)||gameEnd==0) && el.toUpperCase()}\n          </div>\n        ))}\n      </section>\n\n      <div className='keyboard'>\n        {\n        alphabet.split(\"\").map((key, ind)=>\n          <button \n            key={ind} \n            onClick={()=> gameEnd==2 && keyClicked(key.toUpperCase())} \n            className={clsx(\"key\", {\n              \"correct\": guessed.includes(key) && currWord.includes(key),   // Green if guessed and correct\n              \"incorrect\": (guessed.includes(key)) && !currWord.includes(key) // Red if guessed but incorrect\n            })} >\n            {key.toUpperCase()}\n          </button>\n        )}\n      </div>\n\n      {gameEnd!=2 && <button onClick={()=>{gameEnd=2; setGuess([]); setWord(getRandomWord().toUpperCase())}}className='App-newGame'> New Game</button>}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAAO,MAAM;AACzB,SAASC,aAAa,QAAQ,YAAY;AAC1C,OAAOC,QAAQ,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,KAAK,GAAGT,SAAS;EACvB,MAAM,CAACU,QAAQ,EAACC,OAAO,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC;EAChE,MAAM,CAACC,OAAO,EAACC,QAAQ,CAAC,GAAGd,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;EAE7C,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,GAAG,GAAG,CAAC;IACXH,OAAO,CAACI,OAAO,CAAEC,GAAG,IAAK;MACrB,IAAI,CAACT,QAAQ,CAACU,QAAQ,CAACD,GAAG,CAAC,EAAE;QACzBF,GAAG,IAAI,CAAC;MACZ;IACJ,CAAC,CAAC;IACF,OAAOA,GAAG;EACZ,CAAC;EACD,MAAMI,QAAQ,GAAGL,YAAY,CAAC,CAAC;EAE/B,MAAMM,QAAQ,GAAG,4BAA4B,CAACT,WAAW,CAAC,CAAC;EAC3DU,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC;EACpB,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGzB,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;EACpD,SAASe,UAAUA,CAACC,GAAG,EAAC;IACtBb,QAAQ,CAACc,IAAI,IAAIA,IAAI,CAACT,QAAQ,CAACQ,GAAG,CAAC,GAAE,CAAC,GAAGC,IAAI,CAAC,GAAG,CAAC,GAAGA,IAAI,EAAED,GAAG,CAAC,CAAC;IAChE,IAAG,CAAClB,QAAQ,CAACU,QAAQ,CAACQ,GAAG,CAAC,EAAC;MACzBF,YAAY,CAACE,GAAG,CAAC;IACnB,CAAC,MAAI;MACHF,YAAY,CAAC,EAAE,CAAC;IAClB;EACF;EACA,IAAII,OAAO,GAAG,CAAC;EACf,IAAKT,QAAQ,IAAI,CAAC,EAAE;IAClBS,OAAO,GAAG,CAAC;EACb;EACA,IAAGpB,QAAQ,CAACqB,KAAK,CAAC,EAAE,CAAC,CAACC,KAAK,CAACC,MAAM,IAAInB,OAAO,CAACM,QAAQ,CAACa,MAAM,CAAC,CAAC,EAAC;IAC9DH,OAAO,GAAG,CAAC;EACb;EAEA,oBAEExB,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,GAEjBL,OAAO,IAAE,CAAC,iBAAIxB,OAAA,CAACF,QAAQ;MAACgC,KAAK,EAAEC,MAAM,CAACC,UAAW;MAACC,MAAM,EAAEF,MAAM,CAACG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEjFtC,OAAA;MAAK4B,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvB7B,OAAA;QAAQ4B,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAEhC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtC,OAAA;QAAA6B,QAAA,GAAG,gDAED,eAAA7B,OAAA;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,0CACX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEDnB,SAAS,IAAE,EAAE,IAAIK,OAAO,IAAE,CAAC,IAAIT,QAAQ,IAAE,CAAC,iBAC3Cf,OAAA;QAAK4B,SAAS,EAAC,QAAQ;QAAAC,QAAA,GAAC,iBACZ,EAAC1B,KAAK,CAACY,QAAQ,GAAC,CAAC,CAAC,CAACwB,IAAI,EAAC,2BACpC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAIRd,OAAO,IAAE,CAAC,iBAAIxB,OAAA;QAAS4B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBACjD7B,OAAA;UAAA6B,QAAA,EAAI;QAAS;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBtC,OAAA;UAAA6B,QAAA,EAAG;QAAgC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,EAGVd,OAAO,IAAE,CAAC,iBACVxB,OAAA;QAAS4B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAClC7B,OAAA;UAAA6B,QAAA,EAAI;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBtC,OAAA;UAAA6B,QAAA,EAAG;QAAa;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGP,CAAC,eAENtC,OAAA;MAAK4B,SAAS,EAAC,WAAW;MAAAC,QAAA,EAEtB1B,KAAK,CAACqC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACvB1C,OAAA;QAEE4B,SAAS,EAAEhC,IAAI,CAAC,WAAW,EAAE;UAAE,MAAM,EAAE8C,KAAK,GAAG3B;QAAS,CAAC,CAAE;QAC3D4B,KAAK,EAAE;UAAEC,eAAe,EAAEH,OAAO,CAACG,eAAe;UAAEC,KAAK,EAAEJ,OAAO,CAACI;QAAM,CAAE;QAAAhB,QAAA,EAEzEY,OAAO,CAACF;MAAI,GAJRG,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CAEP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC,eAENtC,OAAA;MAAS4B,SAAS,EAAC,UAAU;MAAAC,QAAA,EAC1BzB,QAAQ,CAACqB,KAAK,CAAC,EAAE,CAAC,CAACe,GAAG,CAAC,CAACM,EAAE,EAAEJ,KAAK,kBAChC1C,OAAA;QAAK4B,SAAS,EAAC,MAAM;QAAae,KAAK,EAAE;UAAEE,KAAK,EAAE,CAACrC,OAAO,CAACM,QAAQ,CAACgC,EAAE,CAAC,GAAG,SAAS,GAAG;QAAU,CAAE;QAAAjB,QAAA,EAC/F,CAACrB,OAAO,CAACM,QAAQ,CAACgC,EAAE,CAAC,IAAEtB,OAAO,IAAE,CAAC,KAAKsB,EAAE,CAACvC,WAAW,CAAC;MAAC,GAD9BmC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3B,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAEVtC,OAAA;MAAK4B,SAAS,EAAC,UAAU;MAAAC,QAAA,EAEvBb,QAAQ,CAACS,KAAK,CAAC,EAAE,CAAC,CAACe,GAAG,CAAC,CAAClB,GAAG,EAAEyB,GAAG,kBAC9B/C,OAAA;QAEEgD,OAAO,EAAEA,CAAA,KAAKxB,OAAO,IAAE,CAAC,IAAIH,UAAU,CAACC,GAAG,CAACf,WAAW,CAAC,CAAC,CAAE;QAC1DqB,SAAS,EAAEhC,IAAI,CAAC,KAAK,EAAE;UACrB,SAAS,EAAEY,OAAO,CAACM,QAAQ,CAACQ,GAAG,CAAC,IAAIlB,QAAQ,CAACU,QAAQ,CAACQ,GAAG,CAAC;UAAI;UAC9D,WAAW,EAAGd,OAAO,CAACM,QAAQ,CAACQ,GAAG,CAAC,IAAK,CAAClB,QAAQ,CAACU,QAAQ,CAACQ,GAAG,CAAC,CAAC;QAClE,CAAC,CAAE;QAAAO,QAAA,EACFP,GAAG,CAACf,WAAW,CAAC;MAAC,GANbwC,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOF,CACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELd,OAAO,IAAE,CAAC,iBAAIxB,OAAA;MAAQgD,OAAO,EAAEA,CAAA,KAAI;QAACxB,OAAO,GAAC,CAAC;QAAEf,QAAQ,CAAC,EAAE,CAAC;QAAEJ,OAAO,CAACR,aAAa,CAAC,CAAC,CAACU,WAAW,CAAC,CAAC,CAAC;MAAA,CAAE;MAAAqB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7I,CAAC;AAEV;AAACpC,EAAA,CAlHQD,GAAG;AAAAgD,EAAA,GAAHhD,GAAG;AAoHZ,eAAeA,GAAG;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
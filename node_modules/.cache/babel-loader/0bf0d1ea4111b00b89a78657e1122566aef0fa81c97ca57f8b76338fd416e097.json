{"ast":null,"code":"var _jsxFileName = \"/home/abhi/web dev/Assembly-End-Game/assembly-end-game/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { languages } from './langs.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const langs = languages;\n  const [currWord, setWord] = React.useState(\"react\");\n  const [guessed, setGuess] = React.useState([]);\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  console.log(guessed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Head-header\",\n        children: \"Assembly: Endgame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Guess the word in under 8 attempts to keep the\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), \" programming world safe from Assembly!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Head-p\",\n        children: \"\\u201CFarewell HTML & CSS\\u201D \\uD83E\\uDEE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-Langs\",\n      children: langs.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Lang-item\",\n        style: {\n          backgroundColor: element.backgroundColor,\n          color: element.color\n        },\n        children: element.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"App-word\",\n      children: currWord.split('').map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word\",\n        children: el.toUpperCase()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: alphabet.split(\"\").map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGuess(prev => prev.includes(key.toUpperCase()) ? [...prev] : [...prev, key.toUpperCase()]),\n        className: \"key\",\n        style: {\n          color: {},\n          backgroundColor: \"#FCBA29\"\n        },\n        children: key.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"neCcqKTNfqwlV+cB6f2o1AeKl3s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","languages","React","jsxDEV","_jsxDEV","App","_s","langs","currWord","setWord","useState","guessed","setGuess","alphabet","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","element","index","style","backgroundColor","color","name","split","el","toUpperCase","key","onClick","prev","includes","_c","$RefreshReg$"],"sources":["/home/abhi/web dev/Assembly-End-Game/assembly-end-game/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { languages } from './langs.js';\nimport React from 'react';\n\nfunction App() {\n  \n  const langs = languages;\n  const [currWord,setWord] = React.useState(\"react\");\n\n  const [guessed,setGuess] = React.useState([]);\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  console.log(guessed)\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-head\">\n        <header className=\"Head-header\">\n          Assembly: Endgame  \n        </header>\n        <p>\n          Guess the word in under 8 attempts to keep the\n          <br></br> programming world safe from Assembly!\n        </p>\n        {/* goota add conditional for the button below TODO for color, visibility and text */}\n\n        <div className=\"Head-p\">\n          ‚ÄúFarewell HTML & CSS‚Äù ü´°\n        </div>\n\n      </div>\n        \n      <div className=\"App-Langs\">\n        {\n          langs.map((element, index) => (\n            <div \n              key={index} \n              className=\"Lang-item\" \n              style={{ backgroundColor: element.backgroundColor, color: element.color }}\n            >\n              {element.name}\n            </div>\n            )\n          )\n        }\n      </div>\n\n      <section className='App-word'>\n        {currWord.split('').map((el, index) => (\n          <div className='word' key={index}>{el.toUpperCase()}</div>\n        ))}\n      </section>\n\n      <div className='keyboard'>\n        {\n        alphabet.split(\"\").map((key)=>\n          <button onClick={() => setGuess(prev => prev.includes(key.toUpperCase())? [...prev] : [...prev, key.toUpperCase()])} className='key' style={{color:{}, backgroundColor:\"#FCBA29\"}}>\n            {key.toUpperCase()}\n          </button>\n        )}        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
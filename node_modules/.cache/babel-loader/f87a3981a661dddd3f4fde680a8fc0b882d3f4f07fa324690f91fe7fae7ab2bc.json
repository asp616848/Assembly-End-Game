{"ast":null,"code":"var _jsxFileName = \"/home/abhi/web dev/Assembly-End-Game/assembly-end-game/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { languages } from './langs.js';\nimport React from 'react';\nimport { clsx } from 'clsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const langs = languages;\n  const [currWord, setWord] = React.useState(\"react\".toUpperCase());\n  const [guessed, setGuess] = React.useState([]);\n  const wrongGuesses = () => {\n    let cnt = 0;\n    guessed.forEach(wrd => {\n      if (!currWord.includes(wrd)) {\n        cnt += 1;\n      }\n    });\n    return cnt;\n  };\n  console.log(wrongGuesses());\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase();\n  console.log(guessed);\n  function keyClicked(key) {\n    setGuess(prev => prev.includes(key) ? [...prev] : [...prev, key]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Head-header\",\n        children: \"Assembly: Endgame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Guess the word in under 8 attempts to keep the\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \" programming world safe from Assembly!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Head-p\",\n        children: \"\\u201CFarewell HTML & CSS\\u201D \\uD83E\\uDEE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-Langs\",\n      children: langs.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Lang-item\",\n        style: {\n          backgroundColor: element.backgroundColor,\n          color: element.color\n        },\n        children: element.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"App-word\",\n      children: currWord.split('').map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word\",\n        children: guessed.includes(el) && el.toUpperCase()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: alphabet.split(\"\").map((key, ind) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => keyClicked(key.toUpperCase()),\n        className: clsx(\"key\", {\n          \"correct\": guessed.includes(key) && currWord.includes(key),\n          // Green if guessed and correct\n          \"incorrect\": guessed.includes(key) && !currWord.includes(key) // Red if guessed but incorrect\n        }),\n        children: key.toUpperCase()\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6eIz1HI38LejrX3+If51K+AHZCg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","languages","React","clsx","jsxDEV","_jsxDEV","App","_s","langs","currWord","setWord","useState","toUpperCase","guessed","setGuess","wrongGuesses","cnt","forEach","wrd","includes","console","log","alphabet","keyClicked","key","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","element","index","style","backgroundColor","color","name","split","el","ind","onClick","_c","$RefreshReg$"],"sources":["/home/abhi/web dev/Assembly-End-Game/assembly-end-game/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { languages } from './langs.js';\nimport React from 'react';\nimport {clsx} from 'clsx';\n\nfunction App() {\n  \n  const langs = languages;\n  const [currWord,setWord] = React.useState(\"react\".toUpperCase());\n  const [guessed,setGuess] = React.useState([]);\n\n  const wrongGuesses = ()=>{\n    let cnt = 0;\n    guessed.forEach((wrd) => {\n        if (!currWord.includes(wrd)) { \n            cnt += 1;\n        }\n    });\n    return cnt;\n};\n  console.log(wrongGuesses())\n\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase()\n  console.log(guessed)\n\n  function keyClicked(key){\n    setGuess(prev => prev.includes(key)? [...prev] : [...prev, key])\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-head\">\n        <header className=\"Head-header\">\n          Assembly: Endgame  \n        </header>\n        <p>\n          Guess the word in under 8 attempts to keep the\n          <br></br> programming world safe from Assembly!\n        </p>\n\n        <div className=\"Head-p\">\n          ‚ÄúFarewell HTML & CSS‚Äù ü´°\n        </div>\n\n      </div>\n        \n      <div className=\"App-Langs\">\n        {\n          langs.map((element, index) => (\n            <div \n              key={index} \n              className=\"Lang-item\" \n              style={{ backgroundColor: element.backgroundColor, color: element.color }}\n            >\n              {element.name}\n            </div>\n            )\n          )\n        }\n      </div>\n\n      <section className='App-word'>\n        {currWord.split('').map((el, index) => (\n          <div className='word' key={index}>\n            {guessed.includes(el) &&el.toUpperCase()}\n          </div>\n        ))}\n      </section>\n\n      <div className='keyboard'>\n        {\n        alphabet.split(\"\").map((key, ind)=>\n          <button \n            key={ind} \n            onClick={()=>keyClicked(key.toUpperCase())} \n            className={clsx(\"key\", {\n              \"correct\": guessed.includes(key) && currWord.includes(key),   // Green if guessed and correct\n              \"incorrect\": (guessed.includes(key)) && !currWord.includes(key) // Red if guessed but incorrect\n            })} >\n\n            {key.toUpperCase()}\n          </button>\n        )}        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}